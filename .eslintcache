[{"F:\\webproject\\multilevel-dropdown\\src\\index.js":"1","F:\\webproject\\multilevel-dropdown\\src\\component\\Hero.js":"2","F:\\webproject\\multilevel-dropdown\\src\\context.js":"3","F:\\webproject\\multilevel-dropdown\\src\\component\\NavBar.js":"4","F:\\webproject\\multilevel-dropdown\\src\\component\\SideBar.js":"5","F:\\webproject\\multilevel-dropdown\\src\\App.js":"6","F:\\webproject\\multilevel-dropdown\\src\\component\\SubMenu.js":"7"},{"size":300,"mtime":1609524289647,"results":"8","hashOfConfig":"9"},{"size":1032,"mtime":1609601857304,"results":"10","hashOfConfig":"9"},{"size":986,"mtime":1609676769844,"results":"11","hashOfConfig":"9"},{"size":1497,"mtime":1609677249657,"results":"12","hashOfConfig":"9"},{"size":1605,"mtime":1609603474223,"results":"13","hashOfConfig":"9"},{"size":293,"mtime":1609520610770,"results":"14","hashOfConfig":"9"},{"size":319,"mtime":1609677863864,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gxb2if",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\webproject\\multilevel-dropdown\\src\\index.js",[],"F:\\webproject\\multilevel-dropdown\\src\\component\\Hero.js",[],"F:\\webproject\\multilevel-dropdown\\src\\context.js",["31"],"import React, { useContext, useState } from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport const AppProvider = ({children}) =>{\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n    const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\r\n\r\n    const openSidebar = () =>{\r\n        setIsSidebarOpen(true);\r\n    }\r\n    const closeSidebar = () =>{\r\n        setIsSidebarOpen(false);\r\n    }\r\n    const openSubmenu = () =>{\r\n        setIsSidebarOpen(true);\r\n    }\r\n    const closeSubmenu = () =>{\r\n        setIsSidebarOpen(false);\r\n    }\r\n    return(\r\n        <AppContext.Provider\r\n            value={{\r\n                isSidebarOpen,\r\n                isSubmenuOpen,\r\n                openSidebar,\r\n                closeSubmenu,\r\n                openSubmenu,\r\n                closeSidebar\r\n            }}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\nexport const useGlobalContext = ()=>{\r\n    return useContext(AppContext)\r\n}","F:\\webproject\\multilevel-dropdown\\src\\component\\NavBar.js",["32"],"F:\\webproject\\multilevel-dropdown\\src\\component\\SideBar.js",[],"F:\\webproject\\multilevel-dropdown\\src\\App.js",[],"F:\\webproject\\multilevel-dropdown\\src\\component\\SubMenu.js",[],{"ruleId":"33","severity":1,"message":"34","line":7,"column":27,"nodeType":"35","messageId":"36","endLine":7,"endColumn":43},{"ruleId":"33","severity":1,"message":"37","line":8,"column":39,"nodeType":"35","messageId":"36","endLine":8,"endColumn":51},"no-unused-vars","'setIsSubmenuOpen' is assigned a value but never used.","Identifier","unusedVar","'closeSubmenu' is assigned a value but never used."]